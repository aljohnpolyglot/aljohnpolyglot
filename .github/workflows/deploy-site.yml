# .github/workflows/deploy-site.yml (or your chosen filename like deploy-polyglot-connect-app.yml)
name: Deploy Full Site with Polyglot Connect App to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Prepare deployment staging directory üìÅ
        run: |
          mkdir staging_dir
          # Copy everything EXCEPT the root .git and .gitignore to staging_dir
          echo "Copying project files to staging_dir (excluding root .git and .gitignore)"
          # This find command copies top-level files and directories from current dir (.) to staging_dir/
          # excluding .git, .gitignore (the root one), and staging_dir itself.
          find . -maxdepth 1 -not -name '.git' -not -name '.gitignore' -not -name 'staging_dir' -exec cp -rL '{}' staging_dir/ \;
          echo "Site content copied to staging_dir"

      - name: Create API Keys file in STAGING directory üîë
        run: |
          # Define the path within the staging directory
          STAGING_APP_PATH="staging_dir/polyglot_connect" # Path relative to workspace root
          
          echo "Ensuring directory exists: $STAGING_APP_PATH/js/config"
          mkdir -p "$STAGING_APP_PATH/js/config"

          API_KEYS_FILE_PATH="$STAGING_APP_PATH/js/config/api_keys.js"
          echo "Creating $API_KEYS_FILE_PATH with secrets..."

          echo "// This file is auto-generated by GitHub Action during deployment." > "$API_KEYS_FILE_PATH"
          echo "console.log('api_keys.js (generated by GitHub Action) loaded.');" >> "$API_KEYS_FILE_PATH"
          echo "window.GEMINI_API_KEY = '${{ secrets.GEMINI_API_KEY }}';" >> "$API_KEYS_FILE_PATH"
          echo "window.GEMINI_API_KEY_ALT = '${{ secrets.GEMINI_API_KEY_ALT }}';" >> "$API_KEYS_FILE_PATH"
          echo "window.GEMINI_API_KEY_ALT_2 = '${{ secrets.GEMINI_API_KEY_ALT_2 }}';" >> "$API_KEYS_FILE_PATH"
          echo "window.GROQ_API_KEY = '${{ secrets.GROQ_API_KEY }}';" >> "$API_KEYS_FILE_PATH"
          echo "window.TOGETHER_API_KEY = '${{ secrets.TOGETHER_API_KEY }}';" >> "$API_KEYS_FILE_PATH"
          
          echo "$API_KEYS_FILE_PATH created successfully."
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_API_KEY_ALT: ${{ secrets.GEMINI_API_KEY_ALT }}
          GEMINI_API_KEY_ALT_2: ${{ secrets.GEMINI_API_KEY_ALT_2 }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}

      - name: Verify Staging Directory Content (Debugging) üîç
        run: |
          echo "--- Listing staging_dir root ---"
          ls -A staging_dir/
          echo "--- Does staging_dir/.gitignore exist? (It should NOT if copy worked) ---"
          ls -A staging_dir/.gitignore || echo "No .gitignore in staging_dir root (This is GOOD)"
          echo "--- Listing staging_dir/polyglot_connect/js/config ---"
          ls -A staging_dir/polyglot_connect/js/config/ || echo "Config folder not found in staging"
          echo "--- Content of staged api_keys.js (first 5 lines) ---"
          head -n 5 staging_dir/polyglot_connect/js/config/api_keys.js || echo "api_keys.js not found in staging"

      - name: Deploy staged content to root of gh-pages branch üöÄ
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./staging_dir # Publish from the staging directory
          # destination_dir defaults to repository root on target branch
          keep_files: false 
          force_orphan: true