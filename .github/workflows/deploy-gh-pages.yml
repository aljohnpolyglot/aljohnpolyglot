# .github/workflows/deploy-gh-pages.yml
name: Build and Deploy Polyglot Connect to GitHub Pages

on:
  push:
    branches:
      - main # Or whatever your main deployment branch is (e.g., master)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: # Needed for peaceiris/actions-gh-pages to push to gh-pages branch
      contents: write

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4 # Use a recent version

      # Optional: Setup Node.js if you had any build tools that needed it.
      # For a pure static site with vanilla JS, you might not need this.
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '18'

      - name: Create API Keys file from Secrets 🔑
        run: |
          mkdir -p js/config
          echo "// This file is auto-generated by a GitHub Action during deployment." > js/config/api_keys.js
          echo "console.log('api_keys.js (generated by GitHub Action) loaded.');" >> js/config/api_keys.js
          echo "window.GEMINI_API_KEY = '${{ secrets.GEMINI_API_KEY }}';" >> js/config/api_keys.js
          echo "window.GEMINI_API_KEY_ALT = '${{ secrets.GEMINI_API_KEY_ALT }}';" >> js/config/api_keys.js
          # Add your third Gemini key if you have it as a secret
          # echo "window.GEMINI_API_KEY_ALT_2 = '${{ secrets.GEMINI_API_KEY_ALT_2 }}';" >> js/config/api_keys.js
          echo "window.GROQ_API_KEY = '${{ secrets.GROQ_API_KEY }}';" >> js/config/api_keys.js
          echo "window.TOGETHER_API_KEY = '${{ secrets.TOGETHER_API_KEY }}';" >> js/config/api_keys.js
        env: # Make secrets available as environment variables to the run step
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_API_KEY_ALT: ${{ secrets.GEMINI_API_KEY_ALT }}
          # GEMINI_API_KEY_ALT_2: ${{ secrets.GEMINI_API_KEY_ALT_2 }} # If using a third
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}

      - name: Verify api_keys.js creation # Optional: for debugging the action
        run: |
          echo "Contents of generated api_keys.js:"
          cat js/config/api_keys.js

      # If you had a build step (e.g., npm run build that populates a 'dist' folder), it would go here.
      # For a simple static site where index.html is at the root, publish_dir is './'.

      - name: Deploy to GitHub Pages 🚀
        uses: peaceiris/actions-gh-pages@v3 # Or v4 if available and compatible
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically available
          publish_dir: ./ # Publish the root directory (where index.html and js/ css/ data/ folders are)
          # user_name: 'github-actions[bot]' # Optional: custom committer name
          # user_email: 'github-actions[bot]@users.noreply.github.com' # Optional: custom committer email
          # cname: your-custom-domain.com # Optional: if you have a custom domain
