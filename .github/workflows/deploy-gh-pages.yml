# .github/workflows/deploy-polyglot-connect.yml
name: Deploy Polyglot Connect to GitHub Pages Subdirectory

on:
  push:
    branches:
      - main # Or your default branch if not 'main'
    paths:
      - 'polyglot_connect/**'
      - '.github/workflows/deploy-polyglot-connect.yml'
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for peaceiris/actions-gh-pages to push to gh-pages

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Create API Keys file for Polyglot Connect üîë
        run: |
          echo "Attempting to create directory structure: ./polyglot_connect/js/config"
          mkdir -p ./polyglot_connect/js/config
          echo "Directory structure creation attempt complete."
          
          echo "Creating and populating api_keys.js in ./polyglot_connect/js/config/api_keys.js ..."
          echo "// This file is auto-generated by GitHub Action during deployment." > ./polyglot_connect/js/config/api_keys.js
          echo "console.log('api_keys.js (generated by GitHub Action for Polyglot Connect) loaded.');" >> ./polyglot_connect/js/config/api_keys.js
          echo "window.GEMINI_API_KEY = '${{ secrets.GEMINI_API_KEY }}';" >> ./polyglot_connect/js/config/api_keys.js
          echo "window.GEMINI_API_KEY_ALT = '${{ secrets.GEMINI_API_KEY_ALT }}';" >> ./polyglot_connect/js/config/api_keys.js
          echo "window.GEMINI_API_KEY_ALT_2 = '${{ secrets.GEMINI_API_KEY_ALT_2 }}';" >> ./polyglot_connect/js/config/api_keys.js
          echo "window.GROQ_API_KEY = '${{ secrets.GROQ_API_KEY }}';" >> ./polyglot_connect/js/config/api_keys.js
          echo "window.TOGETHER_API_KEY = '${{ secrets.TOGETHER_API_KEY }}';" >> ./polyglot_connect/js/config/api_keys.js
          echo "api_keys.js creation and population attempt complete."
        # The env block below is redundant if you use ${{ secrets.XYZ }} directly in the echo commands,
        # but it doesn't hurt. It makes the secrets available as environment variables too.
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_API_KEY_ALT: ${{ secrets.GEMINI_API_KEY_ALT }}
          GEMINI_API_KEY_ALT_2: ${{ secrets.GEMINI_API_KEY_ALT_2 }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}

      - name: Verify Files and Structure üîç
        run: |
          echo "Current working directory: $(pwd)"
          echo "--------------------------------------------------"
          echo "Listing ./polyglot_connect directory structure (recursive):"
          ls -R ./polyglot_connect
          echo "--------------------------------------------------"
          echo "Checking api_keys.js existence and content:"
          API_KEYS_FILE_PATH="./polyglot_connect/js/config/api_keys.js"
          if [ -f "$API_KEYS_FILE_PATH" ]; then
            echo "‚úÖ $API_KEYS_FILE_PATH exists."
            echo "--- File Content (first 5 lines) ---"
            head -n 5 "$API_KEYS_FILE_PATH"
            echo "--- End File Content ---"
          else
            echo "‚ùå $API_KEYS_FILE_PATH NOT FOUND in the workspace."
            echo "Listing contents of ./polyglot_connect/js/ (if it exists):"
            ls -A ./polyglot_connect/js/ || echo "./polyglot_connect/js/ directory not found."
            echo "Listing contents of ./polyglot_connect/js/config/ (if it exists):"
            ls -A ./polyglot_connect/js/config/ || echo "./polyglot_connect/js/config/ directory not found."
          fi
          echo "--------------------------------------------------"

      - name: Deploy Polyglot Connect to gh-pages üöÄ
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./polyglot_connect # Source directory from workspace
          destination_dir: ./polyglot_connect # Target directory on gh-pages branch
          keep_files: false  # Ensures a clean deployment by removing old files from destination_dir
          # cname: your-custom-domain.com # Uncomment if you use a custom domain